services:
  # main components
  ccgateway:
    build:
      context: .
      dockerfile: ./cmd/gateway/Dockerfile
    restart: always
    links:
      - db
      - redis
      - loki
      - tempo
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      loki:
        condition: service_started
      tempo:
        condition: service_started
    ports:
      - "8080:8080"
    volumes:
      - ./_etc:/etc/concrnt/:ro
    networks:
      - external
      - internal
    logging:
      driver: loki
      options: 
        loki-url: http://localhost:3100/loki/api/v1/push
    extra_hosts:
      - "host.docker.internal:172.29.253.172"

  ccapi:
    build:
      context: .
      dockerfile: ./cmd/api/Dockerfile
    restart: always
    links:
      - db
      - redis
      - loki
      - tempo
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      loki:
        condition: service_started
      tempo:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - ./_etc:/etc/concrnt/:ro
    networks:
      - external
      - internal
    logging:
      driver: loki
      options: 
        loki-url: http://localhost:3100/loki/api/v1/push

  ccwebui:
    build:
      context: .
      dockerfile: ./web/Dockerfile
    restart: always
    links:
      - loki
    depends_on:
      loki:
        condition: service_started
    ports:
      - "8001:80"
    networks:
      - internal
    logging:
      driver: loki
      options: 
        loki-url: http://localhost:3100/loki/api/v1/push

  hyperproxy:
    image: ghcr.io/concrnt/hyperproxy:latest
    restart: always
    expose:
      - 8080
    networks:
      - external
      - internal

  db:
    restart: always
    image: postgres:16-bookworm
    links:
      - loki
    depends_on:
      loki:
        condition: service_started
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 5s
      retries: 20
    volumes:
      - ./_composeData/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_PASSWORD=postgres"
      - "POSTGRES_DB=concurrent"
    networks:
      - internal
      - external
    logging:
      driver: loki
      options: 
        loki-url: http://localhost:3100/loki/api/v1/push

  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      - "DATA_SOURCE_NAME=postgresql://postgres:postgres@db:5432/postgres?sslmode=disable"
    ports:
      - 9187:9187
    networks:
      - internal

  redis:
    restart: always
    image: redis:7-bookworm
    links:
      - loki
    depends_on:
      loki:
        condition: service_started
    volumes:
      - ./_composeData/redis:/data
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      retries: 20
    ports:
      - "6379:6379"
    networks:
      - internal
      - external
    logging:
      driver: loki
      options: 
        loki-url: http://localhost:3100/loki/api/v1/push

  redis-exporter:
    image: oliver006/redis_exporter:v1.6.0-alpine
    ports:
      - 9121:9121
    networks:
      - internal
    command:
      - '--redis.addr=redis://redis:6379'

  memcached:
    image: memcached:1.6-bookworm
    links:
      - loki
    depends_on:
      loki:
        condition: service_started
    ports:
      - "11211:11211"
    networks:
      - internal
      - external
    logging:
      driver: loki
      options: 
        loki-url: http://localhost:3100/loki/api/v1/push

  memcached-exporter:
    image: prom/memcached-exporter:v0.6.0
    ports:
      - 9150:9150
    networks:
      - internal
    command:
      - '--memcached.address=memcached:11211'

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./_dev/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./_dev/grafana-dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./_dev/dashboards:/etc/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    networks:
      - external
      - internal

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./_dev/prometheus.yaml:/etc/prometheus.yaml
      - ./_composeData/prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    networks:
      - external
      - internal

  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./_composeData/loki:/data/loki
    networks:
      - internal
      - external

  tempo:
    image: grafana/tempo:latest
    ports:
      - "4318:4318"
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./_dev/tempo.yaml:/etc/tempo.yaml
      - ./_composeData/tempo:/tmp/tempo
    networks:
      - internal
      - external

networks:
  external:
  internal:
    internal: true
 
